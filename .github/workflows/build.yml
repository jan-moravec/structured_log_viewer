name: Build Qt Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  QT_VERSION: "6.6.3"
  APP_NAME: "StructuredLogViewer"

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          host: "linux"
          target: "desktop"
          arch: "gcc_64"

      - name: Install CMake
        run: sudo apt-get install -y cmake libfuse2

      - name: Build
        run: |
          mkdir build
          cd build
          export CMAKE_BUILD_PARALLEL_LEVEL=$(nproc)
          cmake -DCMAKE_BUILD_TYPE=Release ..
          cmake --build .

      - name: Install linuxdeployqt
        run: |
          wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
          chmod +x linuxdeployqt-continuous-x86_64.AppImage

      - name: Package application
        run: |
          APP_DIR="${{ env.APP_NAME }}.AppDir"
          mkdir -p $APP_DIR/usr/bin
          mkdir -p $APP_DIR/usr/lib
          mkdir -p $APP_DIR/usr/share/applications
          mkdir -p $APP_DIR/usr/share/icons/hicolor/256x256/apps
          cp -r build/bin/Release/* $APP_DIR/usr/bin
          cp deploy/icon.png $APP_DIR/usr/share/icons/hicolor/256x256/apps/${{ env.APP_NAME }}.png
          cp deploy/app.desktop $APP_DIR/usr/share/applications/${{ env.APP_NAME }}.desktop
          ./linuxdeployqt-continuous-x86_64.AppImage $APP_DIR/usr/share/applications/${{ env.APP_NAME }}.desktop -appimage

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-linux
          path: ./${{ env.APP_NAME }}*.AppImage

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          host: "windows"
          target: "desktop"
          arch: "win64_msvc2019_64"

      - name: Install CMake
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
          choco install ninja -y

      - name: Build
        run: |
          mkdir build
          cd build
          "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" amd64
          $env:CMAKE_BUILD_PARALLEL_LEVEL = (Get-WmiObject -Class Win32_ComputerSystem).NumberOfLogicalProcessors
          cmake -G "Ninja" -DCMAKE_BUILD_TYPE=Release ..
          cmake --build .

      - name: Package application
        run: |
          dir build
          dir build/bin
          dir build/bin/Release
          cd build/bin/Release
          windeployqt --release ${{ env.APP_NAME }}.exe
          dir

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-windows
          path: build/bin/Release/*
